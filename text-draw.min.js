"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}var TextDraw={init:function init(){function a(n,q){var r=e[q-1][n-1];return{text:/(style=')(.*)('>)(.*)(<\/span>)/g.exec(r)[4],styling:/(style=')(.*)(')/g.exec(r)[2]}}function b(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,q=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,s=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;if(r-=1,s-=1,n<=f&&q<=g&&0<n&&0<q){if(n+r<=f&&q+s<=g&&0<=r&&0<=s)return!0;throw Error("Positioning in canvas invalid. Width: "+(r+1)+" Height: "+(s+1)+" goes outside canvas.")}else throw Error("Positioning in canvas invalid. Row: "+q+" Column: "+n+" not found")}function d(n){var q=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"color:black;";//package characters for placing on canvas.
return"<span style='"+q+"'>"+n+"</span>"}//Drawing types
var e=[],f=0,g=0,k={character:"@",char_count:4,//length of line
styling:"color:black;",//styling of line
random_char:!1,//if there is an array of characters choose at random.
random_color:!1,x_pos:0,y_pos:0,draw:function draw(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"@",q=1<arguments.length&&void 0!==arguments[1]?arguments[1]:4,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,s=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,t=4<arguments.length&&void 0!==arguments[4]?arguments[4]:{vertical:!1,styling:"color:black;"};(//DRAW - character, length, y_position, x_position
function(){t.vertical=t.vertical||!1,this.styling=t.styling||"color:black;",this.character=n,this.char_count=q,this.x_pos=r-1,this.y_pos=s-1,t.vertical?b(r,s,1,q):b(r,s,q),this.random_char=!1,this.random_color=!1,Array.isArray(this.character)&&(this.random_char=!0),Array.isArray(this.styling)&&(this.random_color=!0)}).apply(this),function(){var _this=this;if(!1===t.vertical){var v=e[this.y_pos].splice(this.x_pos,this.char_count-1);e[this.y_pos][this.x_pos]=[].concat(_toConsumableArray(Array(this.char_count))).map(function(A,B){var C=_this.character,D=_this.styling;//if character is an array, choose a char from the array.
//special blank character, does not replace existing character on canvas.
return _this.random_char&&(C=_this.character[Math.floor(Math.random()*_this.character.length)]),_this.random_color&&(D=_this.styling[Math.floor(Math.random()*_this.styling.length)]),"_BLANK_"==C?v[B]||e[_this.y_pos][_this.x_pos]:d(C,D);//return pack(character, styling)
}),e[this.y_pos]=[].concat.apply([],e[this.y_pos])}else for(z=0;z<this.char_count;z++){var A=this.character,B=this.styling;this.random&&(A=this.character[Math.floor(Math.random()*this.character.length)]),this.random_color&&(B=this.styling[Math.floor(Math.random()*this.styling.length)]),e[this.y_pos+z][this.x_pos]=d(A,B)}}.apply(this)}};//Master functions
//Public API
return{line:k,square:{character:"@",square_width:4,square_height:4,styling:"color:black;",x_pos:0,y_pos:0,draw:function draw(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"@",q=1<arguments.length&&void 0!==arguments[1]?arguments[1]:4,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:4,s=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,t=4<arguments.length&&void 0!==arguments[4]?arguments[4]:1,u=5<arguments.length&&void 0!==arguments[5]?arguments[5]:{styling:"color:black;"};(//DRAW - character, width, height, y_position, x_position
function(){this.character=n,this.styling=u.styling||"color:black;",this.square_width=q,this.square_height=r,b(s,t,q,r),this.x_pos=s,this.y_pos=t}).apply(this),function(){for(var A=0;A<this.square_height;A++)k.draw(this.character,this.square_width,this.x_pos,this.y_pos+A,{styling:this.styling})}.apply(this)}},text:{characters:"",styling:"color:black;",x_pos:0,y_pos:0,draw:function draw(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",q=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,s=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{styling:"color:black;"};(//DRAW characters in text, x_position, y position
function(){this.characters=n,this.styling=s.styling||"color:black;",this.x_pos=q-1,this.y_pos=r-1}).apply(this),function(){var _this2=this;e[this.y_pos].splice(this.x_pos,this.characters.length-1),e[this.y_pos][this.x_pos]=this.characters.split("").map(function(u){return d(u,_this2.styling)}),e[this.y_pos]=[].concat.apply([],e[this.y_pos])}.apply(this)}},point:{character:"@",styling:"color:black;",x_pos:0,y_pos:0,draw:function draw(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"@",q=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,s=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{styling:"color:black;"};(//DRAW character, x_position, y_position
function(){this.character=n,this.styling=s.styling||"color:black;",this.x_pos=q-1,this.y_pos=r-1}).apply(this),function(){e[this.y_pos][this.x_pos]=d(this.character,this.styling)}.apply(this)}},createCanvas:function createCanvas(q,r){f=q,g=r,e=[].concat(_toConsumableArray(Array(g))).map(function(){return[].concat(_toConsumableArray(Array(f))).map(function(){return d(" ","color:black;")})})},expandCanvas:function expandCanvas(q,r){var s=e.length;for(arr=e.map(function(t){return t.concat([].concat(_toConsumableArray(Array(q-t.length))).map(function(){return d(" ","color:black;")}))}),z=0;z<r-s;z++)arr.push([].concat(_toConsumableArray(Array(q))).map(function(){return d(" ","color:black;")}));f=q,g=r,e=arr},shrinkCanvas:function shrinkCanvas(q,r){arr=e.slice(0,q).map(function(s){return s.slice(0,r)}),f=q,g=r,e=arr},drawCanvas:function drawCanvas(){return e.map(function(q){return q.join("")}).join(" \n")},getContent:a,logCanvas:function logCanvas(){var q=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{display_color:!0},r=e.map(function(s,t){return s.map(function(u,v){return a(v+1,t+1)})});//remove span tags from all characters.
if(!0===q.display_color){var _console,s=[].concat.apply([],r.map(function(t){return t.map(function(u){return u.styling})}));(_console=console).log.apply(_console,[r.map(function(t){return t.map(function(u){return"%c"+u.text}).join("")}).join(" \n")].concat(_toConsumableArray(s)))}else console.log(r.map(function(s){return s.map(function(t){return t.text}).join("")}).join(" \n"))}}},macro:{init:function init(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{functions:[]},b=a.functions||[],d="";return{make:function make(){var f=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{canvas:""};d=f.canvas||"",b.map(function(g){"line"==g.type?d.line.draw(g.c,g.l,g.y,g.x,g.extras):"square"==g.type?d.square.draw(g.c,g.w,g.h,g.y,g.x,g.extras):("text"==g.type||"point"==g.type)&&d.text.draw(g.text||g.c,g.x,g.y,g.extras)})},getinfo:function getinfo(){console.log("functions: "+b,"canvas: "+JSON.stringify(d))}}}}};
