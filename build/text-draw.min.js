"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}var TextDraw={init:function init(){function a(q,r){var s=e[r-1][q-1];return{text:/(style=')(.*)('>)(.*)(<\/span>)/g.exec(s)[4],styling:/(style=')(.*)(')/g.exec(s)[2]}}function b(){var q=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,t=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;if(s-=1,t-=1,q<=f&&r<=g&&0<q&&0<r){if(q+s<=f&&r+t<=g&&0<=s&&0<=t)return!0;throw Error("Positioning in canvas invalid. Width: "+(s+1)+" Height: "+(t+1)+" goes outside canvas.")}else throw Error("Positioning in canvas invalid. Row: "+r+" Column: "+q+" not found")}function d(q){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"color:black;";//package characters for placing on canvas.
return"<span style='"+r+"'>"+q+"</span>"}//Drawing types
var e=[],f=0,g=0,k={character:"@",char_count:4,//length of line
styling:"color:black;",//styling of line
random_char:!1,//if there is an array of characters choose at random.
random_color:!1,x_pos:0,y_pos:0,draw:function draw(){var q=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"@",r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:4,s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,t=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,u=4<arguments.length&&void 0!==arguments[4]?arguments[4]:{vertical:!1,styling:"color:black;"};(//DRAW - character, length, y_position, x_position
function(){u.vertical=u.vertical||!1,this.styling=u.styling||"color:black;",this.character=q,this.char_count=r,this.x_pos=s-1,this.y_pos=t-1,u.vertical?b(s,t,1,r):b(s,t,r),this.random_char=!1,this.random_color=!1,Array.isArray(this.character)&&(this.random_char=!0),Array.isArray(this.styling)&&(this.random_color=!0)}).apply(this),function(){var _this=this;if(!1===u.vertical){var A=e[this.y_pos].splice(this.x_pos,this.char_count-1);e[this.y_pos][this.x_pos]=[].concat(_toConsumableArray(Array(this.char_count))).map(function(C,D){var E=_this.character,F=_this.styling;//if character is an array, choose a char from the array.
//special blank character, does not replace existing character on canvas.
return _this.random_char&&(E=_this.character[Math.floor(Math.random()*_this.character.length)]),_this.random_color&&(F=_this.styling[Math.floor(Math.random()*_this.styling.length)]),"_BLANK_"==E?A[D]||e[_this.y_pos][_this.x_pos]:d(E,F);//return pack(character, styling)
}),e[this.y_pos]=[].concat.apply([],e[this.y_pos])}else for(var B=0;B<this.char_count;B++){var C=this.character,D=this.styling;this.random&&(C=this.character[Math.floor(Math.random()*this.character.length)]),this.random_color&&(D=this.styling[Math.floor(Math.random()*this.styling.length)]),e[this.y_pos+B][this.x_pos]=d(C,D)}}.apply(this)}},n={character:"@",square_width:4,square_height:4,styling:"color:black;",x_pos:0,y_pos:0,draw:function draw(){var q=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"@",r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:4,s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:4,t=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,u=4<arguments.length&&void 0!==arguments[4]?arguments[4]:1,v=5<arguments.length&&void 0!==arguments[5]?arguments[5]:{styling:"color:black;"};(//DRAW - character, width, height, y_position, x_position
function(){this.character=q,this.styling=v.styling||"color:black;",this.square_width=r,this.square_height=s,b(t,u,r,s),this.x_pos=t,this.y_pos=u}).apply(this),function(){for(var B=0;B<this.square_height;B++)k.draw(this.character,this.square_width,this.x_pos,this.y_pos+B,{styling:this.styling})}.apply(this)}};//Master functions
//Public API
return{line:k,square:n,text:{characters:"",styling:"color:black;",x_pos:0,y_pos:0,draw:function draw(){var q=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,t=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{styling:"color:black;"};(//DRAW characters in text, x_position, y position
function(){this.characters=q,this.styling=t.styling||"color:black;",this.x_pos=r-1,this.y_pos=s-1}).apply(this),function(){var _this2=this;e[this.y_pos].splice(this.x_pos,this.characters.length-1),e[this.y_pos][this.x_pos]=this.characters.split("").map(function(v){return d(v,_this2.styling)}),e[this.y_pos]=[].concat.apply([],e[this.y_pos])}.apply(this)}},point:{character:"@",styling:"color:black;",x_pos:0,y_pos:0,draw:function draw(){var q=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"@",r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,t=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{styling:"color:black;"};(//DRAW character, x_position, y_position
function(){this.character=q,this.styling=t.styling||"color:black;",this.x_pos=r-1,this.y_pos=s-1}).apply(this),function(){e[this.y_pos][this.x_pos]=d(this.character,this.styling)}.apply(this)}},createCanvas:function createCanvas(r,s){f=r,g=s,e=[].concat(_toConsumableArray(Array(g))).map(function(){return[].concat(_toConsumableArray(Array(f))).map(function(){return d(" ","color:black;")})})},expandCanvas:function expandCanvas(r,s){var t=e.length,u=e.map(function(A){return A.concat([].concat(_toConsumableArray(Array(r-A.length))).map(function(){return d(" ","color:black;")}))});for(var v=0;v<s-t;v++)u.push([].concat(_toConsumableArray(Array(r))).map(function(){return d(" ","color:black;")}));f=r,g=s,e=u},shrinkCanvas:function shrinkCanvas(r,s){var t=e.slice(0,r).map(function(u){return u.slice(0,s)});f=r,g=s,e=t},clearCanvas:function clearCanvas(){e=e.map(function(r){return r.map(function(){return d(" ","color:black;")})})},fillCanvas:function fillCanvas(){var r=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"@",s=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{styling:"color:black;"};n.draw(r,f,g,1,1,{styling:s.styling})},drawCanvas:function drawCanvas(){return e.map(function(r){return r.join("")}).join(" \n")},getContent:a,logCanvas:function logCanvas(){var r=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{display_color:!0},s=e.map(function(t,u){return t.map(function(v,A){return a(A+1,u+1)})});//remove span tags from all characters.
//percentage characters cause a bug in styling.
if(s.map(function(t){return t.map(function(u){return u.text}).join("")}).join("").match("%")&&console.warn("If you are using percentage symbols in your canvas you may want to switch display_color to false."),!0===r.display_color){var _console,t=[].concat.apply([],s.map(function(u){return u.map(function(v){return v.styling})}));(_console=console).log.apply(_console,[s.map(function(u){return u.map(function(v){return"%c"+v.text}).join("")}).join(" \n")].concat(_toConsumableArray(t)))}else console.log(s.map(function(t){return t.map(function(u){return u.text}).join("")}).join(" \n"))}}},macro:{init:function init(){function b(k){for(var n in k){var r=k[n];for(var q in void 0!=f[n]&&(n=f[n]),r){var s=r[q];d(n,q,s)}}}function d(){var k=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"",q=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"";e[k][n]=q}var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{actions:[],names:[]},e=a.actions||[],f=a.names||[],g="";return{make:function make(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{canvas:""},q=arguments[1];g=n.canvas||"",console.log(q),q&&(Array.isArray(q)?q.map(function(r){b(r)}):b(q)),e.map(function(r){if("line"==r.type)g.line.draw(r.c,r.l,r.x,r.y,r.extras);else if("square"==r.type)g.square.draw(r.c,r.w,r.h,r.x,r.y,r.extras);else if("text"==r.type||"point"==r.type)g.text.draw(r.text||r.c,r.x,r.y,r.extras);else if("macro"==r.type)r.name.make({canvas:g},r.macro_changes);else if("set_macro"==r.type)r.name.setAttributes(r.action,r.changes);else throw Error("Invalid macro type: "+r.type)})},setActions:function setActions(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{actions:e,names:f};e=n.actions||[],f=n.names||[]},setAttribute:d,getInfo:function getInfo(){console.log("actions: "+JSON.stringify(e),"canvas: "+JSON.stringify(g))}}}}};
module.exports = TextDraw;